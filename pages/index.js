import React, { useState, useEffect, Fragment } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import dynamic from 'next/dynamic';

import { httpClient } from '../utils/HttpClient';
import styles from '../styles/Home.module.css';

const SelectNoSSR = dynamic(() => import("react-select"), { ssr: false });

const Home = (props) => {

  const [countries, setCountries] = useState('');
  const [data, setData] = useState([]);
  const [isSearchable, setIsSearchable] = useState(countries);
  const [page, setPage] = useState(1);
  const [dataTable, setDataTable] = useState([]);

  useEffect(() => {
    getCountry();
  }, [setCountries]);

  const getCountry = async () => {
    await httpClient.get(`/countries`)
    .then((res) => {
      const obj = res.data.response.map((item, index) => ({ id: index+1, label: item, value: item }))
      // console.log(obj);
      setCountries(obj);
    })
    .catch((err) => console.log('err', err));
  }

  const toggleSearchable = (search) => {
    setIsSearchable(search)
    getCovidCountry(search.value)
  }

  const getCovidCountry = async (country) => {
    await httpClient.get(`/statistics?country=${country}`)
    .then((res) => {
      console.log('res', res);
      setData(res.data.response)
    })
    .catch((err) => console.log('err', err));
  };

  const column = [
    {
      key: 'name',
      title: 'Name',
      dataIndex: 'name',
    },
    {
      key: 'cumulative',
      title: 'Cases - cumulative total',
      dataIndex: 'cumulative',
    },
    {
      key: 'newly',
      title: 'Cases - newly reported in last 24 hours',
      dataIndex: 'newly',
    },
    {
      key: 'deaths_total',
      title: 'Deaths - cumulative total',
      dataIndex: 'deaths_total',
    },
    {
      key: 'deaths',
      title: 'Deaths - newly reported in last 24 hours',
      dataIndex: 'deaths',
    },
    {
      key: 'transmission',
      title: 'Transmission Classification',
      dataIndex: 'transmission',
    }
  ]

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        <SelectNoSSR
          styles={{width: 200}}
          instanceId="instance-id"
          value={isSearchable}
          onChange={toggleSearchable}
          options={countries}
        />
        <p>selected : {console.log(isSearchable, data)}</p>

        <p>add table</p>
        {
          data.map((item) => (
            <Fragment key={item.country}>
              <div>continent: {item.continent}</div>
              <div>country: {item.country}</div>
              <div>cases:</div>
              <div>cases active: {item.cases.active}</div>
              <div>cases critical: {item.cases.critical}</div>
              <div>cases new: {item.cases.new}</div>
              <div>cases recovered: {item.cases.recovered}</div>
              <div>cases total: {item.cases.total}</div>
              <div>day: {item.day}</div>
              <div>deaths new: {item.deaths.new}</div>
              <div>deaths total: {item.deaths.total}</div>
              <div>population: {item.population}</div>
              <div>tests total: {item.tests.total}</div>
              <div>time: {item.time}</div>
              
            </Fragment>
          ))
        }
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home;
